import ecore : 'http://www.eclipse.org/emf/2002/Ecore';

package mongo : mdb = 'http://www.example.org/mongo'
{
	class MongoDB
	{
		attribute name : String[1];
		property collections : MongoCollection[*] { composes };

		invariant uniqueDocumentIds: collections.documents->collect(d | d.id)->isUnique(id | id);
	}

	class MongoCollection
	{
		attribute name : String[1];
		property documents : MongoDocument[*] { composes };
	}

	class MongoDocument
	{
		attribute id : Integer[1]; 
		property fields : MongoField[*] { composes };
		invariant uniqueFieldNames: fields->isUnique(f | f.name);
	}

	class MongoArray
	{
		attribute values : String[*];
		attribute integerValues : Integer[*];
		attribute floatValues : Real[*];
		property referenceDocuments : MongoDocument[*]; 
		property arrayValues : MongoArray[*] { composes };
		property documentValues : MongoDocument[*] { composes };
		
		invariant singleType:
			(values->isEmpty() and integerValues->isEmpty() and floatValues->isEmpty() and documentValues->isEmpty() and arrayValues->isEmpty() and referenceDocuments->isEmpty()) or
			(values->notEmpty() and integerValues->isEmpty() and floatValues->isEmpty() and documentValues->isEmpty() and arrayValues->isEmpty() and referenceDocuments->isEmpty()) or
			(integerValues->notEmpty() and values->isEmpty() and floatValues->isEmpty() and documentValues->isEmpty() and arrayValues->isEmpty() and referenceDocuments->isEmpty()) or
			(floatValues->notEmpty() and values->isEmpty() and integerValues->isEmpty() and documentValues->isEmpty() and arrayValues->isEmpty() and referenceDocuments->isEmpty()) or
			(arrayValues->notEmpty() and values->isEmpty() and integerValues->isEmpty() and floatValues->isEmpty() and documentValues->isEmpty() and referenceDocuments->isEmpty()) or
			(documentValues->notEmpty() and values->isEmpty() and integerValues->isEmpty() and floatValues->isEmpty() and arrayValues->isEmpty() and referenceDocuments->isEmpty()) or
			(referenceDocuments->notEmpty() and values->isEmpty() and integerValues->isEmpty() and floatValues->isEmpty() and documentValues->isEmpty() and arrayValues->isEmpty());
	}

	class MongoField
	{
		attribute name : String[1];
		attribute valueString : String[?];
		attribute valueInteger : Integer[?];
		attribute valueFloat : Real[?];
		property referenceDocument : MongoDocument[?]; 
		property valueArray : MongoArray[?] { composes };
		property valueDocument : MongoDocument[?] { composes };
		
		invariant oneValueRequired:
			valueString <> null or 
			valueInteger <> null or 
			valueFloat <> null or
			referenceDocument <> null or
			valueArray <> null or
			valueDocument <> null;

		invariant singleValue:
			(valueString <> null and valueInteger = null and valueFloat = null and referenceDocument = null and valueArray = null and valueDocument = null) or 
			(valueInteger <> null and valueString = null and valueFloat = null and referenceDocument = null and valueArray = null and valueDocument = null) or
			(valueFloat <> null and valueString = null and valueInteger = null and referenceDocument = null and valueArray = null and valueDocument = null) or
			(referenceDocument <> null and valueString = null and valueInteger = null and valueFloat = null and valueArray = null and valueDocument = null) or
			(valueArray <> null and valueString = null and valueInteger = null and valueFloat = null and referenceDocument = null and valueDocument = null) or
			(valueDocument <> null and valueString = null and valueInteger = null and valueFloat = null and referenceDocument = null and valueArray = null);
	}
}
